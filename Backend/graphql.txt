1)what is graphql and how its diffrent from rest?
    graphql is a query language and runtime for api which allows client to request only the data they need

    In REST ,API  are accessed through different endpoints. Each endpoint returns a fixed structure of data,
    and we might get more data than we need, or have to make separate requests to get the complete data.

2)When to Use GraphQL or REST?
    GraphQL is ideal for applications with changing data requirements
    REST is recommended when the application has straightforward data requirements and relies on well-established data models

3)What are the key components of GraphQL?
    It consists primarily of three key components: Schema, Resolvers, and Queries or Mutations.
    Schema defines the type of data the is going to be used
    Resolvers are the functions that dictate how that data should be fetched or manipulated.
    Query api to get data
    Mutation Api to write data

4)How does GraphQL work?
    GraphQL operates over a single endpoint using HTTP, typically `/graphql`.
    Clients send queries to this endpoint, specifying exactly what data they need
    The server processes the request, fetching the data from data sources like databases or third-party APIs and returns it.
    The server defines schema of what data is going to be returned
    Resolver on the server side will dictate how data needs to be feteched and how it should be modified
    Error will come as part of response itself in error array


5)how graphql handle versioning compared to rest?
    graphql avoid versioning by allowing cleint to only request the data they need, if changes are made in existing schema , queries will
    still work and client can choose to adopt new fields gradually

6)what are directives and how are they used?
    directives provides a way to describe additional instructions to server about how a field should be handled
    @directives syntax is used to apply directives in query file

    query GetUser($withPost:Boolean!){
        user(id:ID!){
            name
            post @include(if: $withPost){
                title
                description
            }
        }
    }


7)Explain concept of batching/caching in graphql and how can we optimise graphql queries?
    batching means combining multiple queries into a single request to avoid overhead
    caching involves storing and reusing the results of previous queries to avoid redundant data fetching.

8)Intrpspection in graphql? 
    Intrpspection allows client to query schema itself, which makes it easier to understand the api.

9)how graphql handle realt time data?
    it handles using subscription, by allowing client to subscribe to specific event, and server pushes data to client when changes occur.

10)what is dataloader in graphql?
    dataloader is a utility for batching and caching

11)Explain fragments in graphql?
    Fragments are you used to simply query by writing nested fields of query as fragment which can be used at multiple places
    fragment UserInfo on User{
        name
        email
    }

    query getUser{
        User{
            ...UserInfo
            age
        }
    }

   

12)what is apollo client ?
    it simplifies data fetching and state managemnet in UI    

13)pagination in graphql?
    pagination is fetching a set of data at a time
        curser based pagination 
            posts(offset: 0, limit: 10) //offset specifies the starting index, and limit specifies the number of items to fetch

14)Data valdiation in graphql
    using ! operator
    type User {
        id: ID!
        email: String!
        age: Int
        }
15)schema stitching?
    combining multiple schema into one schema 



